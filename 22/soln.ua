# vim: set guifont=Uiua386\:h24:
# Experimental!

Gcd ← ◌⍢(⤚◿)±

┌─╴D₁
  P ← ≡◇(/+⊜⋕⊸≠@\n)⊜□¬⦷"\n\n".
  A ← /↥P
  B ← /+⊏↙3⊸⍖P
└─╴

┌─╴D₂
  P ← ⊙⋅∘°[⊙⊙∘]⍉⊜(-"@ W")⊸≠@\n
  A ← +⊓(/+⊏:3_6_0◿3)/+⊸-P
  B ← +∩/+⊙(×3-1)⊸(+1◿3+)P
└─╴

┌─╴D₃
  A ← /+-⊏:"&`">@`.⊜(⊏⊢⊚=2⊕⊃⧻⊢⊸⊛⊂∩◴°⊟↯2_∞)⊸≠@\n
  B ← /+-⊏:"&`">@`.≡(⊏⊢⊚=3⊕⊃⧻⊢⊸⊛/◇⊂)↯∞_3⊜(□◴)⊸≠@\n
└─╴

┌─╴D₄
  P ← ⊜(↯2_2◇⋕{°$"_-_,_-_"})⊸≠@\n
  A ← /+≡(≠2⌵/+±-°⊟)P
  B ← /+≡(/↥=2⊕⧻⊸⊛/◇⊂+⟜(⍚⇡+1-)°⊟⍉)P
└─╴

┌─╴D₅
  P ← ⊓(
    ≡(□⊏⊚⊸≠@ )⍉≡⊏⊸(¤+1⍜÷⇡4+1⧻⊢)⬚@ ≡°□⍜⇌(↘1)
  | ≡(⍜↘(-1)1⋕{°$"move _ from _ to _"})
  )∩°□°⊟⍚(⊜□⊸≠@\n)⊜□¬⦷"\n\n".
  S! ← ≡◇⊢∧(
    ⊃(⋅⋅∘|∘|⋅⋅⋅∘|⋅∘)°[⊙⊙∘]
    ⍜(°□⊏)(⊂:) ⊙⍜(°□⊏)(⊃↘(^0↙):)
  ):P
  A ← S!⇌
  B ← S!∘
└─╴

┌─╴D₆
  S ← +⟜(⊢⊚≡(=⊙(⧻◴))⟜◫)
  A ← S4
  B ← S14
└─╴

┌─╴D₇
  P ← ⊕/◇+⊛°⊟⍉/◇⊂≡(
    □≡(⊟□↙)⊙¤⇡+1⊸⧻°□°⊟
  )◌∧⍣(
    # ⊙∘⟨⊂:□|⋅⍜⇌(↘1)⟩≍"..".°$"$ cd _"
    ⊙∘⍜⇌(↘1)°$"$ cd .."
  | ⊙∘⊂:□°$"$ cd _"
  | ⊙∘°$"$ ls"
  | ⊙∘◌°$"dir _"
  | ⟜(⊂:¤⊟∩□):⋕⊙◌°$"_ _"
  )⊙({}[])↘1⊜□⊸≠@\n
  A ← /+⊏⊚⊸<100001P
  B ← /↧⊏⊚⊸>-40e6⊸/↥P
└─╴

┌─╴D₈
  ApplyFourDir! ← [⊃⊃⊃(^0|⍜⍉^0|⍜(⇌⍉)^0|⍜⇌^0)]

  P ← ⊜∵⋕⊸≠@\n
  R ← \↥⍜⊢∵⋅¯1↻¯1
  A ← /+♭>/↧⊸ApplyFourDir!R P
  V ← ≡(/+↥⊓<(≠0°\+)⊙.⟜↧⊙\↥⊃↙↘1↘)⊙¤⇡⊸⧻
  B ← /↥♭/×ApplyFourDir!V P
└─╴

┌─╴D₉
  Dirs ← [0_1 ¯1_0 0_¯1 1_0]
  P    ← /◇⊂⊜(□↯:⊃(⊏:Dirs⊗:"RULD"⊢|⋕↘2))⊸≠@\n
  S ← ⧻◴◌∧(
    ⟜(⊂:↙1⇌)∧(|2
      ⊂:¤+⟜(|2 ⨬(⋅0_0|±)⊸(/↥>1⌵)-):⊢⇌,
    )⊃↘↙1⍜⊢+:
  )⊙⊙[]:↯:0_0⊙P
  A ← S2
  B ← S10
└─╴

┌─╴D₁₀
  P ← \+⊂1/◇⊂⊜(□⍣(⊟0⋕|[0])↘5)⊸≠@\n
  A ← /+×+1⟜⊏+19×40⇡6P
  B ← (
    ≡(≤1⌵-)◿40⇡⊸⧻P
    # &imsresh6_inf
    ≡&p↯6_∞⊏:" #"
  )
└─╴

┌─╴D₁₁
  # starting actions ? input
  P ← ⊜(
    ⊓(□⊜⋕⊸(¬⦷)", "↘18)[
      ⊓(≍"*"
      | ⍣(NaN°"old"|⋕)
      | ⋕↘21
      | ⋕↘29
      | ⋕↘30
      ) ∩°□°⊟⊜□⊸≠@ ↘23
    ]°□⊙∩∩°□°[⊙⊙⊙⊙∘]↘1⊜□⊸≠@\n
  )⊸(¬⦷)"\n\n"
  S‼ ← /◇×⊏⊸(↙2⍖)⊢⇌⍉⊙◌⍥(
    ∧( # ind items queues+count logic
      ⊃(¤⊡⊙⋅⋅∘|:⋅⊙⊙∘)⟜⍜(°⊟⊡)(□[]+⧻⟜:°□)
      ∧(^0⨬(+|×)⊙⍣(.°NaN|⊙∘)⊙⊙:⊙°⊂°⊂ # Process worry
        ⍜(°□⊢⊡)⊂⊙:⊡≠0◿⊙,°⊂:          # Test & throw
      )
    )⇡⊸⧻
  )^1≡[⊙(□0)]P
  A ← S‼(⌊÷3)20
  B ← S‼(⊃(◿/×⊡2⍉⋅⋅⋅∘|⊙⊙⊙∘))10000
└─╴

┌─╴D₁₂
  A ← (
    ⊓∩(⊢⊚=)(↥0-@A),@E,@S⊜∘⊸≠@\n # end start heights
    ⊙(⟜⍜⊡⋅0⊙(∵⋅∞.)):⊙⟜⍜⊡⋅25:
    ⊙◌⊡⊙(
      ◌⍢(
        ◴⊂⊙(
          ⊏⊚≡/↧↧≥0,>,¤△:⊙,⊸+D₉~Dirs¤ # bounded dirs, cur steps height
          ⊃(⊙⋅⋅∘|⋅⊙⋅∘|⊙⋅∘|⋅⊙∘|⊙⋅⊙∘)
          ⊏⊚⊙:↧⊓(≥⊓⊡(+1⊡)|<⊓⊡(.+1⊡)) # filtered next steps height
          ⟜⍜⊡↧⊙:
        ):°⊂
      )(>0⧻
      )¤
    )
  )
  B ← (
    ⊓(⊢⊚=)(↥0-@A),@E⊜∘⊸≠@\n # end heights
    ¤⟜⍜⊡⋅0⊙⊸∵⋅∞⟜⍜⊡⋅25
    /↧♭⊡⊚=0:◌⍢(
      ◴⊂⊙(
        ⊏⊚≡/↧↧≥0,>,¤△:⊙,⊸+D₉~Dirs¤ # bounded dirs, cur steps height
        ⊃(⊙⋅⋅∘|⋅⊙⋅∘|⊙⋅∘|⋅⊙∘|⊙⋅⊙∘)
        ⊏⊚⊙:↧⊓(≤⊓⊡(-1⊡)|<⊓⊡(.+1⊡)) # filtered next steps height
        ⟜⍜⊡↧⊙:
      ):°⊂
    )(>0⧻)
  )
└─╴

┌─╴D₁₃
  Cmp ← |2 ⨬(
    ±-
  | Cmp⊙¤
  | Cmp¤
  | ⨬(±-∩⧻|⨬(Cmp◌|⊙⋅◌)⊸≠0Cmp⊙:∩°⊂)↧∩(>0⧻),,
  )°⋯>0⊟∩(⧻△),,∩°□
  A ← /++1⊚⊜(=¯1Cmp:°⊟⊜(□°json)⊸≠@\n)⊸(¬⦷)"\n\n"
  B ← ×+1∩(+1/+=¯1≡Cmp)¤¤¤6,¤¤¤2⊜(□°json)⊸≠@\n # final +1 due to [[2]] < [[6]] unaccounted for
└─╴

┌─╴D₁₄
  P ← (
    ◴/◇⊂⊜(
      ⊜(⊟∩⋕:°$"_,_")⊸(¬⦷)" -> "
      □∧(⊂+¤⟜(☇1⇡+1-)°⊟⊏⊸(⍏≡/+))⊙[]◫2
    )⊸≠@\n
  )
  Draw  ← &ims ∵⨬(0_0_0|1_0_0|1_1_1)
  A ← (
    °⊚⍜(⊢⇌⍉)(-,⟜/↧)P
    ↻¯±⟜⬚0↙+2⊸△
    1⊙(⊟0+1-:500)
    /+=2♭⟜Draw ⋅⊙◌⍢(
      ⊃(⋅⋅∘|⊙⊙∘) # ?. cur outer map orig
      ◌⍢(|4.4
        ⨬( # ?. cur outer map | orig
          +⊙(¤.)≡⊟1 0_¯1_1
          # ?. nexts cur outer map | orig
          :⟜(⊗0⊡)⊃(⊙⋅⋅∘|⋅⊙⊙∘)
          # ?. ind nexts pos outer map | orig
          ⨬(⊙⋅⊙⊙⊡|[]:⍜⊡⋅2⋅⋅⊃(⊙⋅∘|⋅∘))⊸=3
        | []0⋅⋅∘
        )=⊓⊢(-1⧻)⊃(⊙⋅∘|⊙⊙∘)
      )(>0⧻)
    )(∘)
  )
  Drawb ← (
    ⍜(⊢⇌⍉)(-⊸/↧)°map
    ∩(°□)°⊟⊜□:
    ⬚0+∩(°⊚)⊂,
    ↻¯±⟜⬚0↙+2⊸△
    Draw
  )
  B ← (
    1⊙(+1/↥⊢⍉)map⟜≡⋅1.P
    # ?. loop map bottom
    /+=2⟜Drawb⋅⊙◌⍢(
      0_500 # ?. cur outer map bottom
      ≠0⬚0get ⊃(⊙⋅∘|⊙⊙∘)
      ⨬(◌⍢(|4.4
          ⨬( # ?. cur outer map | bottom
            +⊙(¤.)≡⊟1 0_¯1_1
            # ?. nexts cur outer map | bottom
            :⟜(⊗0≡⬚0get)⊙¤⊃(⊙⋅⋅∘|⋅⊙⊙∘)
            # ?. ind nexts pos outer map | bottom
            ⨬(⊙⋅⊙∘⊡|[]:insert⊙2⋅⋅⊃(⊙⋅∘|⋅∘))⊸=3
          | []1insert⊙⋅2 # hit bottom
          )=⊢⊃(⊙⋅⋅∘|⊙⊙⊙∘)
        )(>0⧻)
      | ⋅⋅0
      )
    )(∘)
  )
└─╴

┌─╴D₁₅
  P    ← ⊜(⊃↙↘2♭⋕regex"-?\\D+")⊸≠@\n
  Find ← (
    ⟜(∩⊏⟜:⊚>⌵-)⊙(⊢⇌⍉,,⟜(≡/+⌵-)) # ?. Y sens dists
    +⊙(≡[⊃¯(+1)]-⌵-):⊙≡°⊟       # ?. ranges
    ⊃↘↙1⊏⊸(⍏⊢⍉)
    ∧(⍣(⍜⊡(⊟⊃/↧/↥⊂)⊙:⊢|⊂:¤◌)⊚≥⊢,⊢⇌⍉,)
  )
  A ← +/+≡/-Find ⊙⊙⊙(¯/+=⊢⇌⍉◴) ⊃(⊙⊙∘|⋅⋅∘|∘) 2000000 P # 10
  # Same thing as https://www.reddit.com/R/adventofcode/comments/zmfwg1/comment/j0cvuq5/
  B ← (
    ⊙(¤⊙[])⇡⊸⧻⍉⊟ℂ°⊟⍉⟜(/+⍉⌵-)P
    ∧(⁅+⊙(♭⊞×ⁿ⇡4iℂ⟜-⊸⇡+1◌°ℂ)°⊟°⊂↻ # ?. edge sensors
      ▽⊸(↧∩/↧≥0⟜(≤4e6)⊟°ℂ)        # bound by map
      ⊂∧(▽>:⁅+∩⌵°ℂ-⊙,)⊙(◌°ℂ)°⊟⍉:  # contain in sensors
    )
    +×4e6°ℂ°¤◴
  )
  # B ← ( # Roughly some ideas from the same thread. no idea how this works
  #   ⁅∧(⊂+⊙(♭⊞×ⁿ⇡4iℂ⟜-⊸⇡))⊙⊙[]ℂ°⊟⍉⟜(+1/+⍉⌵-)P # all edges
  #   +×4e6°ℂ⊢▽=⟜(▽=1°▽⊏⊸⍏)°▽⊏⊸⍏                 # ???
  # )
└─╴

┌─╴D₁₆
└─╴

┌─╴D₁₈
  SixDir    ← ☇1⊞↻⇡3≡[0⊙0]1_¯1
  P         ← ⊜(⊜⋕⊸≠@,)⊸≠@\n
  A         ← /+≡⬚1get⊙¤☇1⊞+SixDir⟜∧insert⊙(0[])P
  ThreeDir! ← [⊃⊃(^0|^0⍉|^0°⍉)]
  B ← (
    ⍜⊡⋅1°⊚2⊸∵⋅0↻∵⋅¯1⊸△⬚0↙+2⊸△°⊚P # ?. flood thing
    ¬⊙◌⍥(↧¬,/↥⊂⟜(≡↻SixDir)¤)∞    # flood
    /+ThreeDir!(/+♭=1⍜⍉/+◫2)     # edge detect
  )
└─╴

# ┌─╴D₁₉
#   P ← ⊜(
#     ↘1♭⋕regex"\\D+"
#     ⬚0[⊙⊙⊙∘]⊃(↙1|↙1↘1|↙2↘2|⊂:0⍜↻(⊂0)1↘4)
#   )⊸≠@\n
#   # # [robots] [remain] ? remain blueprint
#   # n ← ∩⊂¤0_0_0_0:⟜(⊃(≡(⬚0↙4°⊚)⊚|▽)≡/↧⊸≥0-:)¤
#   # ?. blueprint
#   M ← |4 (
#     # ?. minute [robots] [ores] bp
#     ?0 ¤1_0_0_0 ¤↯4 0
#     ⍢(⊓(+1
#       | ∧(∩⊂⊙:∩+⟜:⊓(¤|&p⊙⤙⊙⊙∘))⊙⊙∩[]
#       )
#     )(⊸<19)
#     ?
#     ⋅⋅⊓(/↥⊢⇌⍉)◌
#   )
#   A ← /+×⊃(+1⇡⧻|?≡M?)P
# └─╴

┌─╴D₂₀
  P    ← ⊜⋕⊸≠@\n
  Mix! ← ⊢⇌⍉∧(⍜↻(⍜↻(⊂:)⊙(:¤)⊢⇌.°⊂)⊢⊚=⊢⍉,)^0⟜(⍉⊟)⇡⊸⧻
  Ext  ← /+⊏◿⧻,+×1000+1⇡3⊢⊚⊸=0
  A    ← Ext Mix!∘P
  B    ← Ext Mix!(♭↯10)×811589153P
└─╴

┌─╴D₂₁
  P  ← ⬚[]⊜(insert⊃(↙4|□⍣⋕(⍜⊡◇°¤1⊜□⊸≠@ )↘6):)⊸≠@\n
  Ev ← |2.2 (
    get,,
    =3⊸type°□
    ⨬(⊙⋅∘
    | ⊃(⋅∘|⊙⋅⋅⋅∘|⋅⋅⊙∘) °{⊙⊙∘}
      :⊙(↥∩(≠0type),,⊙(Ev:)Ev)
      ⨬(⨬(+|-:|×|÷:)⊗:"+-*/"
      | □{◇⊙⊙∘}:
      )
      ⊙⍜get◌⊃(⊙⋅∘|⋅∘|∘)
    )
  )
  A ← ⊙◌Ev"root"P
  B ← (
    ⊙(⊙◌Ev:)Ev⊙:⊙◌°{⊙⊙∘}°□⊸get"root"⍜get◌,⊙"humn"P
    ◌⍢(
      :⊙(:⍥⊙:.=0⊸type):°{⊙⊙∘} # ?. expr op left-is-num? A B
      ⊙(⨬(-◌                  # X + A = B | A + X = B
        | ⨬(+                 # X - A = B
          | -:                # A - X = B
          )
        | ÷◌   # X * A = B | A * X = B
        | ⨬(×  # X / A = B
          | ÷: # A / X = B
          )
        )⊗:"+-*/"
      )
    )(¬≍"humn"
    )°□
  )
└─╴

┌─╴D₂₂
  # map insts ? input
  P ← (
    °⊟⊜□⊸(¬⦷"\n\n")
    ⊓(⬚@ ⊜∘⊸≠@\n°□
    | ⊙◌∧(◇⍣(⊂:↯⋕⊙,|:◿4+⍥¯≍"R"⊙(1:)))⊙([]0)≡⊢regex"\\D+|L|R"
    )
  )
  A ← +/+×1000_4+1_1⊙◌∧⊸(|3
    ⊃(◿¤⤙(+×¤⟜(↘1⇡⌵/↧÷)⊙:)⊙⊓¤△|⋅:) # all poses in dir of movement
    ⨬⊙◌◌=@#:∩(⊢▽),⟜(⊸≠@ ⊡)
  )⊏:D₉~Dirs⤙⊙⊙(◿4-:4⊢⇌)⊢⊚⊸≠@ P
  B ← /Gcd△P
└─╴

┌─╴D₂₃
  P   ← ⊚=@#⊜∘⊸≠@\n
  Nei ← ▽⋯495☇1⊞⊟.-1⇡3
  # Draw ← &ims°⊚-¤≡/↧⊸⍉.⸮
  Draw  ← &p⊂"\n"/$"_\n_"⊏:".#"°⊚.⸮
  Round ← (
    ⍜▽(
      ≡(+⊙¤≡⊟⨬(:|)⊙0:-1⇡3⊢⊚⊸=0), # ?. try-dirs poses
      ⊙(,⊸(¤¤¤map⟜(⊚⧻)))         # ?. try-dirs poses pos-set poses
      ≡≡≡has⊞+⊙≡¤                # ?. has-nei[dir pos opts] poses
      ≡(⬚4⊢⊚)¬/↥⤸2_1             # ?. dir-inds[pos] poses | dirs
      ⊸+⊏⊙(⊂:¤0_0,)              # ?. props poses
      ⊓⊏∩⊏⊃(⊙∘|⊙⋅∘|⊙⋅⋅∘)⍏.⊸⊛     # ?. inds props poses
      ¬⊸⬚[]⊕(⊂⊙(⨬[1]⊚⊸>1⧻))      # ?. dupped? props poses
      ≡(⊡⊙⊟)
    )≡/↥⊸(≡≡has⊙(¤¤map⟜(⊚⧻)))⤚⊞+:Nei
    ⊙(↻1)
  )
  A ← -⧻⟜(/×≡(+1-⊃/↧/↥)⍉)⊙◌⍥Round10:[¯1_0 1_0 0_¯1 0_1] P
  B ← ◌◌⍥(⊙⊙(+1)Round)∞⊙⊙0:[¯1_0 1_0 0_¯1 0_1] P
└─╴

┌─╴D₂₄
  # ?. [hail] [off] size
  P ← (
    ↘1_1↘¯1_¯1⊜∘⊸≠@\n
    ⊙(⊏:D₉~Dirs)∩▽,⊙⊸(≠4)⊓(☇1|⊗:">^<V"♭)°⊡⟜△
  )
  # ?. steps [pos] [hail] [off] size
  Draw ← (
    &p$"Minute _"
    ∵⋅@.°△⤙⊙⊙⊙◌
    ⊙∩(+1)↻¯1_¯1⬚@#↙+2⊸△
    ⍜⊡∵⋅@E:
    ⊙(⊃(∩▽⟜:|◴▽=0)⊸◰⊙(⊏:">^<V"⊗:D₉~Dirs))
    (|4 ⍜⊡∵⋅@*:⍜⊡◌:)
    &p⊂:"\n"/$"_\n_"
  )
  # ?. steps [pos] [hail] [off] size
  Expl ← (
    # ⊃(Draw|⊙⊙⊙⊙∘)
    ⊃(⊓(+1
      | ⊃(⊙◌◴∧(
            ⊃(⊙:
              ⍣(case([¯1_0 0_0 1_0 0_1]⋅◌)°.0_0    # top left corner
              | case([0_0 ¯1_0]⋅◌)°1⊸(/↥<0)        # starting position
              | case(⊙◌+[¯1_0 0_¯1 0_0 1_0]¤)°.-1, # bottom right corner
              | case(⊙◌+[0_0 ¯1_0]¤)°.-0_1,        # ending position
              | case(▽¬↥⤚⊃(≡/↥≥¤:|⊙◌≡/↥<0)⊂⊸+D₉~Dirs¤)
              )
              ⊂
            | ⋅⋅∘
            )
          )⊙[]⊙⋅⋅∘ # ?. [pos] size
        | ⋅(◿¤:+)
        )
        ▽⊸(¬∈),
      )
    | ⋅⋅⋅⊙∘
    )
  )
  A ← (
    0 [¯1_0] P
    ⍢Expl(¬/↥♭≥¤:⊃(⋅⊙⋅⋅∘|⊙⊙⊙⊙∘))
    ⊙⋅⋅⋅◌
  )
  B ← (
    0 [¯1_0] P
    ⍢Expl(¬/↥♭≥¤:⊃(⋅⊙⋅⋅∘|⊙⊙⊙⊙∘))
    ⊙⊃(¤-0_1⋅⋅⋅∘|⋅⊙⊙∘)
    ⍢Expl(¬∈:¯1_0,)
    ⊙⋅[¯1_0]
    ⍢Expl(¬/↥♭≥¤:⊃(⋅⊙⋅⋅∘|⊙⊙⊙⊙∘))
    ⊙⋅⋅⋅◌
  )
└─╴

┌─╴D₂₅
  Digits ← "=-012"
  Norm   ← /+×ⁿ:5⇡⊸⧻-2⊗:Digits⇌
  Snafu ← (
    /+⬚0≡(⊂⊚)⇡⊸⧻[◌⍢(:⊟⟜(-×5)⊸>2⊃◿(⌊÷)5)±] # mod and join
    ▽⊸(≠1⦷0)⍜(+2⇌)(◌∧(⊃≥(⊂:◿)5+)⊙(0[]))   # carry and strip leading
    ⊏+2:Digits
  )
  A ← Snafu/+⊜Norm⊸≠@\n
└─╴
